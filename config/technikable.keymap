/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    chosen { zmk,matrix_transform = &ortho_transform; };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 4>;
            then-layer = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp GRAVE  &kp Q  &kp W       &kp F       &kp P      &kp B               &kp J       &kp L  &kp U       &kp Y    &kp SEMICOLON  &kp BSLH
&kp ESC    &kp A  &kp R       &kp S       &kp T      &kp G               &kp H       &kp J  &kp K       &kp L    &kp SEMI       &kp SQT
&kp MINUS  &kp Z  &kp X       &kp C       &kp D      &kp V               &kp K       &kp H  &kp COMMA   &kp DOT  &kp FSLH       &kp EQUAL
                  &sys_reset  &lt 1 BSPC  &kp SPACE  &kp TAB  &kp ENTER  &kp RSHIFT  &mo 2  &sys_reset
            >;
        };

        f_layer {
            label = "Fun";
            bindings = <
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans                &trans  &trans    &trans     &trans     &trans    &kp DEL
&trans      &trans        &trans        &trans        &trans        &trans                &trans  &kp LARW  &kp DARW   &kp UARW   &kp RARW  &trans
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END   &trans
                          &trans        &trans        &trans        &trans        &trans  &trans  &trans    &trans
            >;
        };

        nav_layer {
            label = "nav";
            bindings = <
&trans  &kp LBRC   &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp RBRC              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp COLON  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp PLUS              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp TILDE  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(BSLH)          &trans  &trans  &trans  &trans  &trans  &trans
                   &trans      &kp LS(N0)  &trans      &trans        &trans  &trans  &trans  &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp N7  &kp N8  &kp N9  &kp MINUS          &none   &trans  &trans  &trans  &trans  &trans
&kp SLASH         &kp ASTERISK       &kp N4  &kp N5  &kp N6  &kp PLUS           &none   &trans  &trans  &trans  &trans  &trans
&kp BSPC          &kp N0             &kp N1  &kp N2  &kp N3  &kp PERIOD         &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans  &none   &trans  &none       &none  &none   &none   &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
